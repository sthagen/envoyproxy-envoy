
builtin:
- envoy.request_id.uuid
- envoy.upstreams.tcp.generic
- envoy.transport_sockets.tls
- envoy.upstreams.http.http_protocol_options
- envoy.upstreams.http.generic
- envoy.matching.inputs.request_headers
- envoy.matching.inputs.request_trailers
- envoy.matching.inputs.response_headers
- envoy.matching.inputs.response_trailers
- envoy.matching.inputs.destination_ip
- envoy.matching.inputs.destination_port
- envoy.matching.inputs.source_ip
- envoy.matching.inputs.source_port
- envoy.matching.inputs.direct_source_ip
- envoy.matching.inputs.source_type
- envoy.matching.inputs.server_name
- envoy.matching.inputs.transport_protocol
- envoy.matching.inputs.application_protocol

# All Envoy extensions must be tagged with their security hardening stance with
# respect to downstream and upstream data plane threats. These are verbose
# labels intended to make clear the trust that operators may place in
# extensions.
security_postures:
# This extension is hardened against untrusted downstream traffic. It
# assumes that the upstream is trusted.
- robust_to_untrusted_downstream
# This extension is hardened against both untrusted downstream and upstream
# traffic.
- robust_to_untrusted_downstream_and_upstream
# This extension is not hardened and should only be used in deployments
# where both the downstream and upstream are trusted.
- requires_trusted_downstream_and_upstream
# This is functionally equivalent to
# requires_trusted_downstream_and_upstream, but acts as a placeholder to
# allow us to identify extensions that need classifying.
- unknown
# Not relevant to data plane threats, e.g. stats sinks.
- data_plane_agnostic

# Extension categories as defined by factories
categories:
- envoy.access_loggers
- envoy.bootstrap
- envoy.clusters
- envoy.compression.compressor
- envoy.compression.decompressor
- envoy.config.validators
- envoy.filters.http
- envoy.filters.http.cache
- envoy.filters.listener
- envoy.filters.network
- envoy.filters.udp_listener
- envoy.formatter
- envoy.grpc_credentials
- envoy.guarddog_actions
- envoy.health_checkers
- envoy.http.stateful_header_formatters
- envoy.internal_redirect_predicates
- envoy.io_socket
- envoy.http.original_ip_detection
- envoy.matching.common_inputs
- envoy.matching.input_matchers
- envoy.tls.key_providers
- envoy.quic.proof_source
- envoy.quic.server.crypto_stream
- envoy.rate_limit_descriptors
- envoy.request_id
- envoy.resource_monitors
- envoy.retry_host_predicates
- envoy.retry_priorities
- envoy.stats_sinks
- envoy.thrift_proxy.filters
- envoy.tracers
- envoy.sip_proxy.filters
- envoy.transport_sockets.downstream
- envoy.transport_sockets.upstream
- envoy.tls.cert_validator
- envoy.upstreams
- envoy.wasm.runtime
- envoy.common.key_value
- envoy.network.dns_resolver
- envoy.rbac.matchers
- envoy.access_loggers.extension_filters
- envoy.http.stateful_session
- envoy.matching.http.input
- envoy.matching.network.input
- envoy.matching.network.custom_matchers

status_values:
# This extension is stable and is expected to be production usable.
- stable
# This extension is functional but has not had substantial production burn
# time, use only with this caveat.
- alpha
# This extension is work-in-progress. Functionality is incomplete and it is
# not intended for production use.
- wip
